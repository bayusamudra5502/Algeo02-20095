{"version":3,"sources":["components/context/ProcessContext.js","components/context/ConnectionContext.js","service/context/SocketContext.js","components/context/MessageContext.js","components/Progress.js","components/Decomposition.js","assets/pictures.png","assets/plug.png","service/index.js","service/socket.js","components/Connect.js","components/Title.js","components/UploaderArea.js","views/Homepage.js","components/context/ResultContext.js","components/Image.js","components/Settings.js","views/Result.js","App.js","reportWebVitals.js","index.js"],"names":["ProcessContext","createContext","reducer","state","action","ProcessProvider","children","useReducer","isUploadComplete","isUploading","progress","uploadState","setUploadState","isCompressing","isCompressComplete","compressState","setCompressState","Provider","value","resetUpload","resetCompress","ConnectionContext","ConnectionProvider","useState","isConnected","setConnect","SocketContext","SocketProvider","connected","connectState","dispatchConnect","useContext","useEffect","MessageContext","MessageProvider","visibility","setVisibility","type","setType","text","setText","showMessage","message","ToastContainer","position","style","margin","zIndex","Toast","onClose","show","delay","autohide","Body","className","Progress","animated","width","height","Decomposition","rgba","useRef","R","G","B","A","buildMatrix","helper","setTimeout","comment","func","navigate","current","channel","sum","CSSTransition","in","timeout","classNames","unmountOnExit","toFixed","getStatus","server","a","axios","get","data","isReady","console","error","token","image","updater","payload","FormData","append","post","onUploadProgress","e","loaded","total","connectSocket","defaultServer","callback","connectionResponse","socket","io","path","on","userid","id","subscribe","response","success","disconnect","emit","unsubscribe","connect","ConnectComponent","onConnected","isOpened","setOpen","isLoading","setLoading","ipaddr","setIpAddr","port","setPort","option","setOption","serverState","setServerState","onOptionChange","onConnecting","preventDefault","test","url","OverlayTrigger","placement","overlay","Tooltip","onClick","src","plug","alt","Modal","centered","onHide","Header","closeButton","Title","Alert","variant","href","target","rel","Form","Check","name","disabled","onChange","checked","label","onSubmit","Group","Row","Col","FloatingLabel","Control","placeholder","pattern","required","onInput","xs","showAbout","setAbout","picture","UploadArea","useDropzone","onDropAccepted","acceptedFile","log","sendImage","then","result","catch","accept","maxFiles","getRootProps","getInputProps","isDragActive","isDragReject","useMemo","pesan","Homepage","ResultContext","ResultProvider","level","setLevel","alpha","setAlpha","tiles","setTiles","Image","title","grid","showModal","setShowModal","fullscreen","Settings","Range","max","min","parseInt","Math","textAlign","Result","flexDirection","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15121d6e.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst ProcessContext = createContext();\n\nfunction reducer(state, action) {\n  return { ...state, ...action };\n}\n\nexport function ProcessProvider({ children }) {\n  const [uploadState, setUploadState] = useReducer(reducer, {\n    isUploadComplete: false,\n    isUploading: false,\n    progress: 0,\n  });\n\n  const [compressState, setCompressState] = useReducer(reducer, {\n    isCompressing: false,\n    isCompressComplete: false,\n    progress: 0,\n  });\n\n  const resetUpload = () => {\n    setUploadState({\n      isUploadComplete: false,\n      isUploading: false,\n      progress: 0,\n    });\n  };\n\n  const resetCompress = () => {\n    setCompressState({\n      isCompressing: false,\n      isCompressComplete: false,\n      progress: 0,\n    });\n  };\n\n  return (\n    <ProcessContext.Provider\n      value={{\n        uploadState,\n        setUploadState,\n        compressState,\n        setCompressState,\n        resetUpload,\n        resetCompress,\n      }}\n    >\n      {children}\n    </ProcessContext.Provider>\n  );\n}\n\nexport default ProcessContext;\n","import React, { createContext, useState } from \"react\";\n\nconst ConnectionContext = createContext();\n\nexport function ConnectionProvider({ children }) {\n  const [isConnected, setConnect] = useState(false);\n\n  return (\n    <ConnectionContext.Provider value={{ isConnected, setConnect }}>\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport default ConnectionContext;\n","import React, { createContext, useContext, useEffect, useReducer } from \"react\";\nimport ConnectionContext from \"../../components/context/ConnectionContext\";\n\nconst SocketContext = createContext();\n\nfunction reducer(state, action) {\n  return { ...state, ...action };\n}\n\nexport function SocketProvider({ children }) {\n  const [connectState, dispatchConnect] = useReducer(reducer, {\n    connected: false,\n  });\n  const { setConnect } = useContext(ConnectionContext);\n\n  useEffect(() => {\n    setConnect(!!connectState?.connected);\n  }, [connectState, setConnect]);\n\n  return (\n    <SocketContext.Provider value={{ connectState, dispatchConnect }}>\n      {children}\n    </SocketContext.Provider>\n  );\n}\n\nexport default SocketContext;\n","import React, { createContext, useState } from \"react\";\nimport { Toast, ToastContainer } from \"react-bootstrap\";\nimport {\n  AiFillCheckCircle,\n  AiFillCloseCircle,\n  AiFillExclamationCircle,\n} from \"react-icons/ai\";\n\nconst MessageContext = createContext();\n\nexport function MessageProvider({ children }) {\n  const [visibility, setVisibility] = useState(false);\n  const [type, setType] = useState(\"success\");\n  const [text, setText] = useState(\"\");\n\n  function showMessage(message, type) {\n    setType(type);\n    setText(message);\n    setVisibility(true);\n  }\n\n  function circle() {\n    if (type === \"warning\") {\n      return (\n        <span className=\"text text-yellow\">\n          <AiFillExclamationCircle />\n        </span>\n      );\n    } else if (type === \"error\") {\n      return (\n        <span className=\"text text-red\">\n          <AiFillCloseCircle />\n        </span>\n      );\n    } else if (type === \"success\") {\n      return (\n        <span className=\"text text-green\">\n          <AiFillCheckCircle></AiFillCheckCircle>\n        </span>\n      );\n    } else {\n      return <span></span>;\n    }\n  }\n\n  return (\n    <>\n      <MessageContext.Provider value={{ showMessage }}>\n        {children}\n      </MessageContext.Provider>\n      <ToastContainer\n        position=\"top-end\"\n        style={{ margin: \"10px\", zIndex: \"5000\" }}\n      >\n        <Toast\n          onClose={() => setVisibility(false)}\n          show={visibility}\n          delay={3000}\n          autohide\n        >\n          <Toast.Body>\n            <div>\n              {circle()}\n              {text}\n            </div>\n          </Toast.Body>\n        </Toast>\n      </ToastContainer>\n    </>\n  );\n}\n\nexport default MessageContext;\n","import React from \"react\";\n\nexport default function Progress({ value, animated }) {\n  return (\n    <div className=\"progress\">\n      <div\n        className={\n          \"progress-bar progress-bar-striped bg-proses-ok \" +\n          (animated ? \"progress-bar-animated\" : \"\")\n        }\n        style={{ width: `${value * 100}%`, height: \"100%\" }}\n      ></div>\n    </div>\n  );\n}\n","import { navigate } from \"@reach/router\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { BsGear } from \"react-icons/bs\";\nimport { CSSTransition } from \"react-transition-group\";\nimport SocketContext from \"../service/context/SocketContext\";\nimport MessageContext from \"./context/MessageContext\";\nimport ProcessContext from \"./context/ProcessContext\";\nimport Progress from \"./Progress\";\n\nexport default function Decomposition() {\n  const { uploadState, compressState, setCompressState, resetCompress } =\n    useContext(ProcessContext);\n\n  const { showMessage } = useContext(MessageContext);\n\n  const rgba = useRef({\n    R: 0,\n    G: 0,\n    B: 0,\n    A: 0,\n  });\n\n  const [text, setText] = useState(\"Menunggu proses dimulai...\");\n\n  const {\n    connectState: {\n      helper: { buildMatrix },\n      progress = {},\n    },\n  } = useContext(SocketContext);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (!compressState.isCompressing) {\n        resetCompress();\n        buildMatrix();\n        setCompressState({\n          isCompressing: true,\n        });\n      }\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    if (progress.value) {\n      const { value, comment } = progress;\n      setText(comment);\n\n      if (value.func === 0) {\n        if (value.progress < 1) {\n          setCompressState({\n            progress: value.progress,\n          });\n        } else {\n          setCompressState({\n            isCompressing: false,\n            progress: value.progress,\n            isCompressComplete: true,\n          });\n\n          showMessage(\"Gambar berhasil didekomposisi\", \"success\");\n\n          navigate(\"/result\");\n        }\n      } else {\n        rgba.current[value.channel] = value.value;\n\n        const sum =\n          rgba.current[\"R\"] +\n          rgba.current[\"G\"] +\n          rgba.current[\"B\"] +\n          rgba.current[\"A\"];\n\n        setCompressState({\n          progress: 0.1 + 0.9 * (sum / 4),\n        });\n      }\n    }\n  }, [progress]);\n\n  return (\n    <CSSTransition\n      in={uploadState.isUploadComplete}\n      timeout={300}\n      classNames=\"fade\"\n      unmountOnExit\n    >\n      <div className=\"right-container\">\n        <div className=\"icon spinning\">\n          <BsGear />\n        </div>\n        <p className=\"h5\">Membentuk Matriks</p>\n        <p>Tunggu yaa, kita lagi buat dekomposisinya dulu</p>\n        <div className=\"progress-bar-container\">\n          <Progress value={compressState.progress} animated={true} />\n          <div className=\"d-flex justify-content-between mt-2\">\n            <p>{text}</p>\n            <p>{(compressState.progress * 100).toFixed(2)}%</p>\n          </div>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pictures.f69c51c0.png\";","export default __webpack_public_path__ + \"static/media/plug.ca5edc1d.png\";","import axios from \"axios\";\n\nexport async function getStatus(server) {\n  try {\n    const { data } = await axios.get(`${server}/status`);\n    return !!data.isReady;\n  } catch (err) {\n    console.error(err);\n    return false;\n  }\n}\n\nexport async function sendImage(server, token, image, updater = () => {}) {\n  const payload = new FormData();\n\n  payload.append(\"token\", token);\n  payload.append(\"file\", image);\n\n  try {\n    await axios.post(`${server}/upload`, payload, {\n      onUploadProgress: function (e) {\n        updater(e.loaded / e.total);\n      },\n    });\n\n    return true;\n  } catch (err) {\n    console.error(err);\n    return false;\n  }\n}\n\nexport async function getActualCompress(server, level) {\n  try {\n    const { data } = await axios.get(`${server}/compress/${level}/status`);\n\n    return data.compress;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n","import io from \"socket.io-client\";\nimport data from \"../config.json\";\nimport { getStatus } from \".\";\n\nexport default async function connectSocket(\n  server = data.defaultServer,\n  callback,\n  connectionResponse = () => {}\n) {\n  const socket = io(`${server}`, { path: \"/ws/socket.io\" });\n\n  if (await getStatus(server)) {\n    callback({ server });\n\n    socket.on(\"connect\", () => {\n      callback({ error: { error: false } });\n      callback({ connected: socket.connected });\n      callback({ userid: socket.id });\n      subscribe();\n    });\n\n    socket.on(\"connect_failed\", () => {\n      callback({ error: { error: true, message: \"Koneksi websocket error\" } });\n    });\n\n    socket.on(\"disconnect\", () => {\n      callback({ connected: socket.connected });\n      callback({ userid: null });\n    });\n\n    socket.on(\"response\", (data) => {\n      callback({ response: data });\n    });\n\n    socket.on(\"progress\", (data) => {\n      callback({ progress: data });\n    });\n\n    socket.on(\"connection-response\", (data) => {\n      connectionResponse(data);\n      if (!data?.success) {\n        socket.disconnect();\n      }\n    });\n\n    const subscribe = function () {\n      socket.emit(\"subscribe\", {});\n    };\n\n    const unsubscribe = function () {\n      socket.emit(\"unsubscribe\", {});\n    };\n\n    const buildMatrix = function () {\n      socket.emit(\"build-matrix\", {});\n    };\n\n    callback({ helper: { subscribe, unsubscribe, buildMatrix } });\n\n    socket.connect();\n\n    return true;\n  } else {\n    callback({ error: { error: true, message: \"Server sedang sibuk\" } });\n    return false;\n  }\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Alert,\n  Col,\n  FloatingLabel,\n  Form,\n  Modal,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from \"react-bootstrap\";\nimport plug from \"../assets/plug.png\";\nimport { defaultServer } from \"../config.json\";\nimport { getStatus } from \"../service\";\nimport SocketContext from \"../service/context/SocketContext\";\nimport MessageContext from \"./context/MessageContext\";\nimport connectSocket from \"../service/socket\";\n\nexport default function ConnectComponent({ onConnected }) {\n  const [isOpened, setOpen] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [ipaddr, setIpAddr] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n  const [option, setOption] = useState(-1);\n  const [serverState, setServerState] = useState(0);\n\n  const { dispatchConnect } = useContext(SocketContext);\n\n  const { showMessage } = useContext(MessageContext);\n\n  function onClose() {\n    setPort(\"\");\n    setIpAddr(\"\");\n    setOpen(false);\n  }\n\n  function onOptionChange(value) {\n    setOption(value);\n\n    if (value === 0) {\n      setPort(\"443\");\n      setIpAddr(defaultServer);\n    } else {\n      setPort(\"\");\n      setIpAddr(\"\");\n    }\n  }\n\n  const onConnecting = async function (e) {\n    setLoading(true);\n    e.preventDefault();\n\n    const regex = /https?:\\/\\/.*/;\n    let url = ipaddr;\n\n    if (!regex.test(url)) {\n      url = \"http://\" + url;\n    }\n\n    if (await getStatus(`${url}:${port}`)) {\n      await connectSocket(`${url}:${port}`, dispatchConnect, (response) => {\n        if (response.success) {\n          onConnected && onConnected();\n          showMessage(\"Berhasil tersambung\", \"success\");\n        } else {\n          showMessage(\"Gagal menyambungkan socket\", \"error\");\n        }\n      });\n\n      onClose();\n    } else {\n      showMessage(\"Server saat ini tidak bisa digunakan\", \"error\");\n    }\n\n    setLoading(false);\n    return true;\n  };\n\n  useEffect(() => {\n    if (isOpened) {\n      (async () => {\n        setServerState(0);\n        const serverState = await getStatus(defaultServer + \":443\");\n\n        if (serverState) {\n          setServerState(1);\n        } else {\n          setServerState(-1);\n        }\n      })();\n    }\n  }, [isOpened]);\n\n  function overlayStatus() {\n    if (serverState === 0) {\n      return (\n        <Tooltip id=\"isConnecting-tooltip\">Menghubungkan ke server...</Tooltip>\n      );\n    } else if (serverState === 1) {\n      return <Tooltip id=\"isAvailable-tooltip\">Server tersedia</Tooltip>;\n    } else {\n      return (\n        <Tooltip id=\"isNotAvailable-tooltip\">Server tidak tersedia</Tooltip>\n      );\n    }\n  }\n\n  return (\n    <>\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={<Tooltip id=\"connect-tooltip\">Sambungkan Koneksi</Tooltip>}\n      >\n        <button className=\"connect-plug\" onClick={() => setOpen(true)}>\n          <img src={plug} alt=\"Connection Plug\"></img>\n        </button>\n      </OverlayTrigger>\n\n      {/* Bootstap Modal */}\n      <Modal show={isOpened} centered onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Konfigurasi Server</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Alert variant=\"info\">\n            Server lokal bisa anda dapatkan{\" \"}\n            <a\n              href=\"https://github.com/bayusamudra5502/Algeo02-20095\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              disini\n            </a>\n          </Alert>\n          <div className=\"mb-3\">\n            <h2 className=\"h6\">Pilihan server</h2>\n            <Form.Check\n              type=\"radio\"\n              id=\"default\"\n              name=\"server\"\n              value={0}\n              disabled={serverState === -1}\n              onChange={() => onOptionChange(0)}\n              checked={option === 0}\n              label={\n                <>\n                  Gunakan server default{\" \"}\n                  <OverlayTrigger placement=\"bottom\" overlay={overlayStatus()}>\n                    <span\n                      className={(() => {\n                        if (serverState === 0) {\n                          return \"connecting connect-status\";\n                        } else if (serverState === -1) {\n                          return \"disconnected connect-status\";\n                        } else {\n                          return \"connected connect-status\";\n                        }\n                      })()}\n                    ></span>\n                  </OverlayTrigger>\n                </>\n              }\n            />\n            <Form.Check\n              type=\"radio\"\n              name=\"server\"\n              id=\"local\"\n              value={1}\n              checked={option === 1}\n              onChange={() => onOptionChange(1)}\n              label=\"Gunakan server lokal\"\n            />\n          </div>\n          <div>\n            <Form onSubmit={onConnecting}>\n              {option === 1 && (\n                <>\n                  <h2 className=\"h6\">Konfigurasi server lokal</h2>\n                  <Form.Group className=\"mb-4\">\n                    <Row>\n                      <Col>\n                        <FloatingLabel label=\"Server\">\n                          <Form.Control\n                            placeholder=\"127.0.0.1\"\n                            pattern=\"(https?://)?[A-Za-z0-9.]+\"\n                            required\n                            value={ipaddr}\n                            onInput={(e) => {\n                              setIpAddr(e.target.value);\n                            }}\n                          />\n                        </FloatingLabel>\n                      </Col>\n                      <Col xs={4}>\n                        <FloatingLabel label=\"Port\">\n                          <Form.Control\n                            type=\"number\"\n                            placeholder=\"8080\"\n                            required\n                            value={port}\n                            onInput={(e) => {\n                              setPort(e.target.value);\n                            }}\n                          />\n                        </FloatingLabel>\n                      </Col>\n                    </Row>\n                  </Form.Group>\n                </>\n              )}\n              <Form.Group>\n                <button disabled={isLoading} className=\"btn btn-success\">\n                  Connect\n                </button>\n              </Form.Group>\n            </Form>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport picture from \"../assets/pictures.png\";\nimport { Modal } from \"react-bootstrap\";\nimport ConnectionContext from \"./context/ConnectionContext\";\nimport ConnectComponent from \"./Connect\";\n\nexport default function Title() {\n  const [showAbout, setAbout] = useState(false);\n  const { isConnected, setConnect } = useContext(ConnectionContext);\n\n  const handleClose = () => setAbout(false);\n  const handleOpen = () => setAbout(true);\n\n  const onConnected = () => {\n    setConnect(true);\n  };\n\n  return (\n    <>\n      <div className=\"title\">\n        <div className=\"picture\">\n          <img src={picture} alt=\"Gambar\"></img>\n        </div>\n        <div>\n          <h1 className=\"h2\">Image Compressor</h1>\n          <p>Yuk buat ukuran file gambar lebih kecil</p>\n        </div>\n        <div className=\"status\">\n          <h2 className=\"sub-judul\">Koneksi</h2>\n          <div>\n            <span\n              className={\n                \"statusbar \" + (isConnected ? \"connected\" : \"disconnected\")\n              }\n            ></span>\n            {isConnected ? \"Tersambung\" : \"Tidak Tersambung\"}\n            {!isConnected ? <ConnectComponent onConnected={onConnected} /> : \"\"}\n          </div>\n        </div>\n        <div className=\"bottom\">\n          <h2 className=\"sub-judul\">Tentang Program ini</h2>\n          <p>Program ini dibuat oleh kelompok X</p>\n          <p>\n            Lihat informasi lengkap{\" \"}\n            <button className=\"button-link\" onClick={handleOpen}>\n              disini\n            </button>\n            .\n          </p>\n        </div>\n      </div>\n      <Modal show={showAbout} centered onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tentang Kami</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"header\">\n            <div className=\"picture\">\n              <img src={picture} alt=\"Gambar\"></img>\n            </div>\n            <h1 className=\"h2 text-center my-2\">Image Compressor</h1>\n            <p className=\"h5 text-center text-muted\">Versi 1.0.0</p>\n          </div>\n          <div className=\"kontributor\">\n            <h2 className=\"sub-judul\">Kontributor</h2>\n            <ul>\n              <li>Firizky Ardiansyah (13520095)</li>\n              <li>Bayu Samudra (13520128)</li>\n              <li>Ikmal Alfaozi (13520125)</li>\n            </ul>\n          </div>\n          <div>\n            <h2 className=\"sub-judul\">Deskripsi Singkat</h2>\n            <p>\n              Kompresi gambar merupakan suatu tipe kompresi data yang dilakukan\n              pada gambar digital. Dengan kompresi gambar, suatu file gambar\n              digital dapat dikurangi ukuran filenya dengan baik tanpa\n              mempengaruhi kualitas gambar secara signifikan. Terdapat berbagai\n              metode dan algoritma yang digunakan untuk kompresi gambar pada\n              zaman modern ini\n            </p>\n            <p>\n              {\" \"}\n              Salah satu algoritma yang dapat digunakan untuk kompresi gambar\n              adalah algoritma SVD (Singular Value Decomposition). Algoritma SVD\n              didasarkan pada teorema dalam aljabar linier yang menyatakan bahwa\n              sebuah matriks dua dimensi dapat dipecah menjadi hasil perkalian\n              dari 3 sub-matriks yaitu matriks ortogonal U, matriks diagonal S,\n              dan transpose dari matriks ortogonal V.{\" \"}\n            </p>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import React, { useContext, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FiInbox, FiAlertOctagon, FiArrowDown } from \"react-icons/fi\";\nimport { BsCloudSlash } from \"react-icons/bs\";\nimport ConnectionContext from \"./context/ConnectionContext\";\nimport ProcessContext from \"./context/ProcessContext\";\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\nimport Progress from \"./Progress\";\nimport { sendImage } from \"../service\";\nimport SocketContext from \"../service/context/SocketContext\";\nimport MessageContext from \"./context/MessageContext\";\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default function UploadArea() {\n  const { uploadState, setUploadState, resetUpload } =\n    useContext(ProcessContext);\n  const {\n    connectState: { server, userid },\n  } = useContext(SocketContext);\n  const { showMessage } = useContext(MessageContext);\n\n  const onDropAccepted = function (acceptedFile) {\n    resetUpload();\n\n    console.log(server);\n\n    sendImage(server, userid, acceptedFile[0], (progress) => {\n      setUploadState({\n        progress,\n      });\n    })\n      .then((result) => {\n        if (result) {\n          setUploadState({\n            isUploading: false,\n            isUploadComplete: true,\n          });\n\n          showMessage(\"Gambar berhasil diupload\", \"success\");\n        } else {\n          setUploadState({\n            isUploading: false,\n            isUploadComplete: false,\n          });\n\n          showMessage(\"Terjadi kesalahan saat mengupload\", \"error\");\n        }\n      })\n      .catch(() => {\n        setUploadState({\n          isUploading: false,\n          isUploadComplete: false,\n        });\n\n        showMessage(\"Terjadi kesalahan saat mengupload\", \"error\");\n      });\n  };\n\n  const { isConnected } = useContext(ConnectionContext);\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\n    useDropzone({\n      onDropAccepted,\n      accept: \"image/png, image/jpeg, image/jpg\",\n      maxFiles: 1,\n    });\n\n  const className = useMemo(() => {\n    if (isDragReject) {\n      return \"uploader-container drag-reject\";\n    } else if (isDragActive) {\n      return \"uploader-container drag-active\";\n    } else {\n      return \"uploader-container\";\n    }\n  }, [isDragActive, isDragReject]);\n\n  const pesan = useMemo(() => {\n    if (isDragReject) {\n      return (\n        <>\n          <div className=\"icon\">\n            <FiAlertOctagon />\n          </div>\n          <p className=\"h6\">Format file tidak diizinikan.</p>\n          <p>\n            Masukan yang diperbolehkan hanya file <code>.jpg</code>,{\" \"}\n            <code>.jpeg</code>, atau <code>.png</code>\n          </p>\n        </>\n      );\n    } else if (isDragActive) {\n      return (\n        <>\n          <div className=\"icon\">\n            <FiArrowDown />\n          </div>\n          <p className=\"h5\">Lepas file disini</p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"icon\">\n            <FiInbox />\n          </div>\n          <p className=\"h5\">Letakan file disini...</p>\n          <p>atau kalau mau klik disini juga boleh</p>\n        </>\n      );\n    }\n  }, [isDragActive, isDragReject]);\n\n  return (\n    <div className=\"upload-container-outer\">\n      {!(uploadState.isUploading || uploadState.isUploadComplete) && (\n        <>\n          <CSSTransition\n            in={!isConnected}\n            timeout={300}\n            classNames=\"no-connection\"\n            unmountOnExit\n          >\n            <div className=\"overlay\">\n              <div className=\"text\">\n                <div className=\"icon\">\n                  <BsCloudSlash />\n                </div>\n                <p className=\"h5\">Anda belum tersambung</p>\n                <p>Silahkan sambungkan program ini sebelum mengupload gambar</p>\n              </div>\n            </div>\n          </CSSTransition>\n\n          <div {...getRootProps({ className })}>\n            <input {...getInputProps()} />\n            {pesan}\n          </div>\n        </>\n      )}\n      <CSSTransition\n        in={uploadState.isUploading}\n        timeout={300}\n        classNames=\"fade\"\n        unmountOnExit\n      >\n        <div className=\"right-container\">\n          <div className=\"icon\">\n            <AiOutlineCloudUpload />\n          </div>\n          <p className=\"h5\">Sedang megupload</p>\n          <p>Tunggu yaa, kita lagi mengupload dulu..</p>\n          <div className=\"progress-bar-container\">\n            <Progress value={uploadState.progress} animated={true} />\n            <div className=\"d-flex justify-content-between mt-2\">\n              <p>\n                {uploadState.progress < 1\n                  ? \"Mengupload Gambar...\"\n                  : \"Mengkonversi gambar menjadi matriks...\"}\n              </p>\n              <p>{(uploadState.progress * 100).toFixed(2)}%</p>\n            </div>\n          </div>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport ProcessContext from \"../components/context/ProcessContext\";\nimport Decomposition from \"../components/Decomposition\";\nimport Title from \"../components/Title\";\nimport UploadArea from \"../components/UploaderArea\";\n\nexport default function Homepage() {\n  const { uploadState } = useContext(ProcessContext);\n  return (\n    <main>\n      <Title></Title>\n      <UploadArea />\n      {uploadState.isUploadComplete && <Decomposition />}\n    </main>\n  );\n}\n","import React, { createContext, useState } from \"react\";\n\nconst ResultContext = createContext();\n\nexport function ResultProvider({ children }) {\n  const [level, setLevel] = useState(100);\n  const [alpha, setAlpha] = useState(false);\n  const [tiles, setTiles] = useState(false);\n\n  return (\n    <ResultContext.Provider\n      value={{ level, setLevel, alpha, setAlpha, tiles, setTiles }}\n    >\n      {children}\n    </ResultContext.Provider>\n  );\n}\n\nexport default ResultContext;\n","import React, { useContext, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { AiOutlineExpand } from \"react-icons/ai\";\nimport ResultContext from \"./context/ResultContext\";\n\nexport default function Image({ src, alt, title }) {\n  const { tiles: grid } = useContext(ResultContext);\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <div className=\"display-image\">\n        <div>\n          <h2 className=\"sub-judul\">{title}</h2>\n        </div>\n        <div className={\"image\" + (grid ? \" show-grid\" : \"\")}>\n          <div>\n            <img src={src} alt={alt} />\n          </div>\n          <button className=\"layer\" onClick={() => setShowModal(true)}>\n            <div className=\"icon\">\n              <AiOutlineExpand />\n            </div>\n            <p className=\"h4\">Tampilkan ukuran asli</p>\n          </button>\n        </div>\n      </div>\n      <Modal\n        show={showModal}\n        fullscreen={true}\n        onHide={() => setShowModal(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Gambar ukuran asli</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            className={\n              \"d-flex w-100 align-item-center h-100 justify-content-center\" +\n              (grid ? \" show-grid\" : \"\")\n            }\n          >\n            <img src={src} alt={alt} />\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Col, Form, Row } from \"react-bootstrap\";\nimport picture from \"../assets/pictures.png\";\nimport SocketContext from \"../service/context/SocketContext\";\nimport ConnectionContext from \"./context/ConnectionContext\";\nimport ResultContext from \"./context/ResultContext\";\n\nexport default function Settings() {\n  const { isConnected } = useContext(ConnectionContext);\n  const { level, setLevel, alpha, setAlpha, tiles, setTiles } =\n    useContext(ResultContext);\n  const {\n    connectState: { server },\n  } = useContext(SocketContext);\n\n  const imageUrl = () => {\n    if (alpha) {\n      return `${server}/compress/${level}/download?alpha=1`;\n    } else {\n      return `${server}/compress/${level}/download`;\n    }\n  };\n\n  return (\n    <div className=\"result\">\n      <div className=\"title-result\">\n        <div className=\"picture\">\n          <img src={picture} alt=\"Gambar\"></img>\n        </div>\n        <div>\n          <h1 className=\"h4\">Image Compressor</h1>\n          <p>Yuk lihat hasil kompresi gambarnya</p>\n        </div>\n      </div>\n      <div className=\"configuration\">\n        <div>\n          <div className=\"status mb-2\">\n            <h2 className=\"sub-judul\">Koneksi</h2>\n            <div>\n              <span\n                className={\n                  \"statusbar \" + (isConnected ? \"connected\" : \"disconnected\")\n                }\n              ></span>\n              {isConnected ? \"Tersambung\" : \"Tidak Tersambung\"}\n            </div>\n          </div>\n          <div className=\"mb-2\">\n            <h2 className=\"sub-judul\">Data Eksekusi</h2>\n            <div>\n              <div className=\"fst-italic\">Waktu Kompresi</div>\n              <p>1200 ms</p>\n            </div>\n            <div>\n              <div className=\"fst-italic\">Persentase Kompresi</div>\n              <p>100 %</p>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-2\">\n            <h2 className=\"sub-judul\">Tingkat Kompresi</h2>\n            <Row>\n              <Col className=\"d-flex align-items-center\">\n                <Form.Range\n                  max={100}\n                  min={0}\n                  value={level}\n                  onChange={(e) => {\n                    setLevel(parseInt(e.target.value));\n                  }}\n                />\n              </Col>\n              <Col xs={4}>\n                <Form.Control\n                  type=\"number\"\n                  value={level}\n                  min={0}\n                  max={100}\n                  onChange={(e) => {\n                    setLevel(\n                      parseInt(Math.max(0, Math.min(e.target.value, 100)))\n                    );\n                  }}\n                  placeholder=\"%\"\n                ></Form.Control>\n              </Col>\n            </Row>\n          </div>\n          <div>\n            <h2 className=\"sub-judul\">Pengaturan Lainnya</h2>\n            <Form.Check\n              type=\"checkbox\"\n              id=\"alpha\"\n              label=\"Compress kanal alpha\"\n              checked={alpha}\n              onChange={() => {\n                setAlpha(!alpha);\n              }}\n            ></Form.Check>\n            <Form.Check\n              type=\"checkbox\"\n              id=\"tiles\"\n              label=\"Gunakan background tiles\"\n              checked={tiles}\n              onChange={() => {\n                setTiles(!tiles);\n              }}\n            ></Form.Check>\n          </div>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <h2 className=\"sub-judul\">Unduh gambar</h2>\n          <a\n            className=\"btn btn-success mb-2 mt-3\"\n            href={imageUrl()}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Unduh\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport Image from \"../components/Image\";\nimport Settings from \"../components/Settings\";\nimport ResultContext from \"../components/context/ResultContext\";\nimport SocketContext from \"../service/context/SocketContext\";\nimport ProcessContext from \"../components/context/ProcessContext\";\nimport ConnectionContext from \"../components/context/ConnectionContext\";\nimport { navigate } from \"@reach/router\";\n\nexport default function Result() {\n  const { alpha, level } = useContext(ResultContext);\n  const { compressState } = useContext(ProcessContext);\n  const { isConnected } = useContext(ConnectionContext);\n  const {\n    connectState: { server },\n  } = useContext(SocketContext);\n\n  const imageUrl = () => {\n    if (alpha) {\n      return `${server}/compress/${level}/?alpha=1`;\n    } else {\n      return `${server}/compress/${level}/`;\n    }\n  };\n\n  useEffect(() => {\n    if (!compressState?.isCompressComplete && !isConnected) {\n      navigate(\"/\");\n    }\n  }, [compressState, isConnected]);\n\n  return (\n    <main style={{ flexDirection: \"column\" }}>\n      <Settings />\n      <div className=\"result-container\">\n        <Image\n          src={`${server}/compress/100/`}\n          alt=\"Original\"\n          grid={true}\n          title=\"Original\"\n        />\n        <Image\n          src={imageUrl()}\n          alt=\"Hasil Kompresi\"\n          grid={true}\n          title=\"Hasil Kompresi\"\n        />\n      </div>\n    </main>\n  );\n}\n","import \"./styles/index.scss\";\nimport React, { Router } from \"@reach/router\";\nimport Homepage from \"./views/Homepage\";\nimport Result from \"./views/Result\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Homepage path=\"/\" />\n        <Result path=\"/result\" to=\"/\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ConnectionProvider } from \"./components/context/ConnectionContext\";\nimport { ProcessProvider } from \"./components/context/ProcessContext\";\n\nimport { SocketProvider } from \"./service/context/SocketContext\";\nimport { MessageProvider } from \"./components/context/MessageContext\";\n\nimport \"bootstrap/scss/bootstrap.scss\";\nimport \"./styles/index.scss\";\nimport { ResultProvider } from \"./components/context/ResultContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MessageProvider>\n      <ConnectionProvider>\n        <SocketProvider>\n          <ProcessProvider>\n            <ResultProvider>\n              <App />\n            </ResultProvider>\n          </ProcessProvider>\n        </SocketProvider>\n      </ConnectionProvider>\n    </MessageProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}