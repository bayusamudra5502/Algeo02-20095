{"version":3,"sources":["assets/pictures.png","components/Progress.js","components/context/ConnectionContext.js","components/context/ProcessContext.js","assets/plug.png","components/Connect.js","components/Title.js","components/UploaderArea.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Progress","value","animated","className","style","width","height","ConnectionContext","createContext","ConnectionProvider","children","useState","isConnected","setConnect","serverState","setServerState","Provider","ProcessContext","ProcessProvider","isUploading","setUploadState","isCompressing","progress","compressState","setCompressState","ConnectComponent","onConnected","isOpened","setOpen","ipaddr","setIpAddr","port","setPort","onConnecting","e","a","preventDefault","serverData","ip","console","dir","onClose","OverlayTrigger","placement","overlay","Tooltip","id","onClick","src","plug","alt","Modal","show","centered","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","Label","Control","placeholder","required","onInput","target","type","showAbout","setAbout","useContext","picture","UploadArea","onFileLoaded","useDropzone","onDropAccepted","acceptedFile","accept","maxFiles","getRootProps","getInputProps","isDragActive","isDragReject","useMemo","pesan","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa824b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pictures.f69c51c0.png\";","export default function Progress({ value, animated }) {\n  return (\n    <div className=\"progress\">\n      <div\n        className={\n          \"progress-bar progress-bar-striped bg-proses-ok \" +\n          (animated ? \"progress-bar-animated\" : \"\")\n        }\n        style={{ width: `${value * 100}%`, height: \"100%\" }}\n      ></div>\n    </div>\n  );\n}\n","import React, { createContext, useState } from \"react\";\n\nconst ConnectionContext = createContext();\n\nexport function ConnectionProvider({ children }) {\n  const [isConnected, setConnect] = useState(false);\n  const [serverState, setServerState] = useState({});\n\n  return (\n    <ConnectionContext.Provider\n      value={{ isConnected, setConnect, serverState, setServerState }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport default ConnectionContext;\n","import React, { createContext, useState } from \"react\";\n\nconst ProcessContext = createContext();\n\nexport function ProcessProvider({ children }) {\n  const [isUploading, setUploadState] = useState(false);\n  const [compressState, setCompressState] = useState({\n    isCompressing: false,\n    progress: 0,\n  });\n\n  return (\n    <ProcessContext.Provider\n      value={{ isUploading, setUploadState, compressState, setCompressState }}\n    >\n      {children}\n    </ProcessContext.Provider>\n  );\n}\n\nexport default ProcessContext;\n","export default __webpack_public_path__ + \"static/media/plug.ca5edc1d.png\";","import { useState } from \"react\";\nimport { Form, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport plug from \"../assets/plug.png\";\n\nexport default function ConnectComponent({ onConnected }) {\n  const [isOpened, setOpen] = useState(false);\n  const [ipaddr, setIpAddr] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n\n  const onConnecting = async function (e) {\n    e.preventDefault();\n    const serverData = { ip: ipaddr, port };\n\n    console.dir(serverData);\n\n    onConnected && onConnected();\n    onClose();\n    return true;\n  };\n\n  function onClose() {\n    setPort(\"\");\n    setIpAddr(\"\");\n    setOpen(false);\n  }\n\n  return (\n    <>\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={<Tooltip id=\"connect-tooltip\">Sambungkan Koneksi</Tooltip>}\n      >\n        <button className=\"connect-plug\" onClick={() => setOpen(true)}>\n          <img src={plug} alt=\"Connection Plug\"></img>\n        </button>\n      </OverlayTrigger>\n      <Modal show={isOpened} centered onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Server Config</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Silahkan masukan konfigurasi server anda</p>\n          <div>\n            <Form onSubmit={onConnecting}>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>IP Address</Form.Label>\n                <Form.Control\n                  placeholder=\"127.0.0.1\"\n                  required\n                  value={ipaddr}\n                  onInput={(e) => {\n                    setIpAddr(e.target.value);\n                  }}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-4\">\n                <Form.Label>Port</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"5502\"\n                  required\n                  value={port}\n                  onInput={(e) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Form.Group>\n              <Form.Group>\n                <button className=\"btn btn-success\">Connect</button>\n              </Form.Group>\n            </Form>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import picture from \"../assets/pictures.png\";\nimport Progress from \"./Progress\";\nimport { Modal } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport ConnectionContext from \"./context/ConnectionContext\";\nimport ProcessContext from \"./context/ProcessContext\";\nimport ConnectComponent from \"./Connect\";\n\nexport default function Title() {\n  const [showAbout, setAbout] = useState(false);\n  const { isConnected, setConnect } = useContext(ConnectionContext);\n  const { compressState } = useContext(ProcessContext);\n\n  const handleClose = () => setAbout(false);\n  const handleOpen = () => setAbout(true);\n\n  const onConnected = () => {\n    setConnect(true);\n  };\n\n  return (\n    <>\n      <div className=\"title\">\n        <div className=\"picture\">\n          <img src={picture} alt=\"Gambar\"></img>\n        </div>\n        <div>\n          <h1 className=\"h2\">Image Compressor</h1>\n          <p>Yuk buat ukuran file gambar lebih kecil</p>\n        </div>\n        <div className=\"status\">\n          <h2 className=\"sub-judul\">Koneksi</h2>\n          <div>\n            <span\n              className={\n                \"statusbar \" + (isConnected ? \"connected\" : \"disconnected\")\n              }\n            ></span>\n            {isConnected ? \"Tersambung\" : \"Tidak Tersambung\"}\n            {!isConnected ? <ConnectComponent onConnected={onConnected} /> : \"\"}\n          </div>\n        </div>\n        {compressState.isCompressing ? (\n          <div>\n            <h2 className=\"sub-judul\">Proses Kompresi</h2>\n            <Progress value={compressState.progress} animated={true}></Progress>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"bottom\">\n          <h2 className=\"sub-judul\">Tentang Program ini</h2>\n          <p>Program ini dibuat oleh kelompok X</p>\n          <p>\n            Lihat informasi lengkap{\" \"}\n            <button className=\"button-link\" onClick={handleOpen}>\n              disini\n            </button>\n            .\n          </p>\n        </div>\n      </div>\n      <Modal show={showAbout} centered onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tentang Kami</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"header\">\n            <div className=\"picture\">\n              <img src={picture} alt=\"Gambar\"></img>\n            </div>\n            <h1 className=\"h2 text-center my-2\">Image Compressor</h1>\n            <p className=\"h5 text-center text-muted\">Versi 1.0.0</p>\n          </div>\n          <div className=\"kontributor\">\n            <h2 className=\"sub-judul\">Kontributor</h2>\n            <ul>\n              <li>Firizky Ardiansyah (13520095)</li>\n              <li>Bayu Samudra (13520128)</li>\n              <li>Ikmal Alfaozi (13520125)</li>\n            </ul>\n          </div>\n          <div>\n            <h2 className=\"sub-judul\">Deskripsi Singkat</h2>\n            <p>\n              Kompresi gambar merupakan suatu tipe kompresi data yang dilakukan\n              pada gambar digital. Dengan kompresi gambar, suatu file gambar\n              digital dapat dikurangi ukuran filenya dengan baik tanpa\n              mempengaruhi kualitas gambar secara signifikan. Terdapat berbagai\n              metode dan algoritma yang digunakan untuk kompresi gambar pada\n              zaman modern ini\n            </p>\n            <p>\n              {\" \"}\n              Salah satu algoritma yang dapat digunakan untuk kompresi gambar\n              adalah algoritma SVD (Singular Value Decomposition). Algoritma SVD\n              didasarkan pada teorema dalam aljabar linier yang menyatakan bahwa\n              sebuah matriks dua dimensi dapat dipecah menjadi hasil perkalian\n              dari 3 sub-matriks yaitu matriks ortogonal U, matriks diagonal S,\n              dan transpose dari matriks ortogonal V.{\" \"}\n            </p>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import { useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FiInbox, FiAlertOctagon, FiArrowDown } from \"react-icons/fi\";\n\nexport default function UploadArea({ onFileLoaded }) {\n  const onDropAccepted = function (acceptedFile) {\n    console.dir(acceptedFile);\n    onFileLoaded && onFileLoaded(acceptedFile[0]);\n  };\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\n    useDropzone({\n      onDropAccepted,\n      accept: \"image/png, image/jpeg, image/jpg\",\n      maxFiles: 1,\n    });\n\n  const className = useMemo(() => {\n    if (isDragReject) {\n      return \"uploader-container drag-reject\";\n    } else if (isDragActive) {\n      return \"uploader-container drag-active\";\n    } else {\n      return \"uploader-container\";\n    }\n  }, [isDragActive, isDragReject]);\n\n  const pesan = useMemo(() => {\n    if (isDragReject) {\n      return (\n        <>\n          <div className=\"icon\">\n            <FiAlertOctagon />\n          </div>\n          <p className=\"h6\">Format file tidak diizinikan.</p>\n          <p>\n            Masukan yang diperbolehkan hanya file <code>.jpg</code>,{\" \"}\n            <code>.jpeg</code>, atau <code>.png</code>\n          </p>\n        </>\n      );\n    } else if (isDragActive) {\n      return (\n        <>\n          <div className=\"icon\">\n            <FiArrowDown />\n          </div>\n          <p className=\"h5\">Lepas file disini</p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"icon\">\n            <FiInbox />\n          </div>\n          <p className=\"h5\">Letakan file disini...</p>\n          <p>atau kalau mau klik disini juga boleh</p>\n        </>\n      );\n    }\n  }, [isDragActive, isDragReject]);\n\n  return (\n    <>\n      <div className=\"overlay\"></div>\n      <div {...getRootProps({ className })}>\n        <input {...getInputProps()} />\n        {pesan}\n      </div>\n    </>\n  );\n}\n","import Title from \"./Title\";\nimport UploadArea from \"./UploaderArea\";\n\nexport default function Content() {\n  return (\n    <main>\n      <Title></Title>\n      <UploadArea />\n    </main>\n  );\n}\n","import \"./styles/index.scss\";\nimport Content from \"./components/Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Content></Content>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ConnectionProvider } from \"./components/context/ConnectionContext\";\nimport { ProcessProvider } from \"./components/context/ProcessContext\";\n\nimport \"bootstrap/scss/bootstrap.scss\";\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConnectionProvider>\n      <ProcessProvider>\n        <App />\n      </ProcessProvider>\n    </ConnectionProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}